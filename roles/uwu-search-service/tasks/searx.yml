---
- name: ensure firewalld is running
  ansible.builtin.service:
    name: firewalld
    state: started
    enabled: yes
  become: yes

- name: Force lockdown all ports
  ansible.builtin.command:
    cmd: firewall-cmd --set-default-zone=drop
  become: yes

- name: stat ports to open
  ansible.builtin.set_fact:
    expose_service_ts_port_number: "{{ expose_service_ts_port_number | default([]) | list }}"
  ansible.builtin.set_fact:
    has_ports: "{{ expose_service_ts_port_number | length > 0 }}"
  ignore_errors: yes
    
- name: internally expose http service port to tor network
  ansible.builtin.firewalld:
    port: "{{ item }}/{{ expose_service_ts_port_protocol }}"
    permanent: yes
    state: enabled
  become: yes
  with_items: "{{ expose_service_ts_port_number | default([]) }}"
  when: has_ports
  ignore_errors: yes

- name: reload firewalld
  ansible.builtin.service:
    name: firewalld
    state: reloaded
  become: yes

- name: establish seaxng user
  user:
    name: searxng
    shell: /bin/bash
    system: yes
    home: /usr/local/searxng
    comment: "uwu privacy-respecting metasearch engine"
  become: yes

- name: add as a sudor
  lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^searxng.*'
    line: "searxng ALL=(ALL) NOPASSWD:ALL"
    validate: /usr/sbin/visudo -cf %s
  become: yes

- name: Create home directory for searxng
  file:
    path: /usr/local/searxng
    state: directory
    owner: searxng
    group: searxng
    mode: '0755'
  become: yes
    
- name: Create etc directory for searxng
  file:
    path: /etc/searxng/
    state: directory
    owner: searxng
    group: searxng
    mode: '0755'
  become: yes
    
- name: Check if source tree exists
  stat:
    path: "/usr/local/searxng/searxng-src/.git"
  register: stat_searxng_tree
    
- name: clone jess's searxng
  ansible.builtin.git:
    repo: https://github.com/jesssullivan/searxng.git
    dest: /usr/local/searxng/searxng-src
    version: "{{ branch }}"
    update: yes
    force: yes
  become: yes
  become_user: searxng
  when: not stat_searxng_tree.stat.exists
    
- name: update jess's searxng repo if we've already cloned here
  become_user: searxng
  shell: |
    git pull || true
  args:
    chdir: /usr/local/searxng/searxng-src
  become_user: searxng
    
- name: copy templated settings to host
  template:
    src: settings.yml.j2
    dest: /etc/searxng/settings.yml
    owner: searxng
    group: searxng
    mode: '0644'
    backup: yes
  become: yes
  become_user: searxng
    
# Set up venv
- name: Create Python virtual environment
  ansible.builtin.command:
    cmd: python3 -m venv /usr/local/searxng/searx-pyenv
  become: yes
  become_user: searxng

- name: Upgrade pip, setuptools, and wheel
  ansible.builtin.shell: |
    /usr/local/searxng/searx-pyenv/bin/pip install -U pip setuptools wheel pyyaml
  become: yes
  become_user: searxng

- name: Install SearXNG in virtual environment
  ansible.builtin.shell: |
    /usr/local/searxng/searx-pyenv/bin/pip install --use-pep517 --no-build-isolation -e /usr/local/searxng/searxng-src
  become: yes
  become_user: searxng

# Configure Redis
- name: Enable and start Redis
  ansible.builtin.systemd:
    name: redis
    enabled: yes
    state: started
  become: yes
    
# Create uWSGI configuration
- name: Create uWSGI configuration
  ansible.builtin.copy:
    dest: /etc/uwsgi.d/searxng.ini
    content: |
      [uwsgi]
      chdir = /usr/local/searxng/searxng-src
      module = searx.webapp:app
      virtualenv = /usr/local/searxng/searx-pyenv
      socket = /run/uwsgi/searchies.sock
      chmod-socket = 660
      vacuum = true
      die-on-term = true
    owner: root
    group: root
    mode: '0644'
  become: yes
    
- name: Enable and start uWSGI
  ansible.builtin.systemd:
    name: uwsgi
    enabled: yes
    state: started
  become: yes

- name: Create systemd service for SearXNG
  ansible.builtin.copy:
    dest: /etc/systemd/system/searxng.service
    content: |
      [Unit]
      Description=SearXNG Web Application
      After=network.target redis.service

      [Service]
      Type=simple
      User=searxng
      Group=searxng
      Environment="SEARXNG_SETTINGS_PATH=/etc/searxng/settings.yml"
      ExecStart=/usr/local/searxng/searx-pyenv/bin/python /usr/local/searxng/searxng-src/searx/webapp.py
      WorkingDirectory=/usr/local/searxng/searxng-src
      Restart=always
      RestartSec=10

      [Install]
      WantedBy=multi-user.target
    owner: root
    group: root
    mode: '0644'
  become: yes

- name: Reload systemd to apply changes
  ansible.builtin.command:
    cmd: systemctl daemon-reload
  become: yes

- name: start engine, whoowhoooooo
  ansible.builtin.systemd:
    name: searxng
    enabled: yes
    state: started
  become: yes
